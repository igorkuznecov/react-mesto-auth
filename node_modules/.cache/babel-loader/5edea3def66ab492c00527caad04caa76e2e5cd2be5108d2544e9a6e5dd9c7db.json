{"ast":null,"code":"var _jsxFileName = \"/Users/igorkuznecov/dev/mesto-react/src/components/InfoTooltip/InfoTooltip.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport successImg from '../../images/Success.svg';\nimport errorImg from '../../images/Error.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InfoTooltip(_ref) {\n  _s();\n  let {\n    isOpened,\n    success,\n    error\n  } = _ref;\n  const [img, setImg] = React.usetate('');\n  const [text, setText] = React.useState('');\n  function statusSwitch() {\n    if (success) {\n      setImg(successImg);\n      setText('Вы успешно зарегистрировались!');\n    } else if (error) {\n      setImg(errorImg);\n      setText('Что-то пошло не так! Попробуйте ещё раз.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `popup popup_opened`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        className: \"popup__close-button\",\n        onClick: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__info-pic\",\n        src: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title popup__title_centered\",\n        children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(InfoTooltip, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","successImg","errorImg","jsxDEV","_jsxDEV","InfoTooltip","_ref","_s","isOpened","success","error","img","setImg","usetate","text","setText","useState","statusSwitch","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/Users/igorkuznecov/dev/mesto-react/src/components/InfoTooltip/InfoTooltip.js"],"sourcesContent":["import React from 'react';\nimport successImg from '../../images/Success.svg'\nimport errorImg from '../../images/Error.svg'\n\nexport default function InfoTooltip({ isOpened, success, error }) {\n\n  const [img, setImg] = React.usetate('');\n  const [text, setText] = React.useState('');\n\n  function statusSwitch() {\n    if (success) {\n      setImg(successImg)\n      setText('Вы успешно зарегистрировались!')\n\n    } else if (error) {\n      setImg(errorImg)\n      setText('Что-то пошло не так! Попробуйте ещё раз.')\n    }\n  }\n\n  return (\n    <section className={`popup popup_opened`}>\n      <div className='popup__container'>\n        <button\n          type='button'\n          aria-label='Закрыть'\n          className='popup__close-button'\n          onClick={null}\n        />\n        <img className='popup__info-pic' src={img} />\n        <h2 className='popup__title popup__title_centered'>Вы успешно зарегистрировались!</h2>\n      </div>\n    </section>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAE9D,MAAM,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGZ,KAAK,CAACa,OAAO,CAAC,EAAE,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASC,YAAYA,CAAA,EAAG;IACtB,IAAIR,OAAO,EAAE;MACXG,MAAM,CAACX,UAAU,CAAC;MAClBc,OAAO,CAAC,gCAAgC,CAAC;IAE3C,CAAC,MAAM,IAAIL,KAAK,EAAE;MAChBE,MAAM,CAACV,QAAQ,CAAC;MAChBa,OAAO,CAAC,0CAA0C,CAAC;IACrD;EACF;EAEA,oBACEX,OAAA;IAASc,SAAS,EAAG,oBAAoB;IAAAC,QAAA,eACvCf,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bf,OAAA;QACEgB,IAAI,EAAC,QAAQ;QACb,cAAW,4CAAS;QACpBF,SAAS,EAAC,qBAAqB;QAC/BG,OAAO,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFrB,OAAA;QAAKc,SAAS,EAAC,iBAAiB;QAACQ,GAAG,EAAEf;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CrB,OAAA;QAAIc,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAA8B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAAClB,EAAA,CA9BuBF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}