{"ast":null,"code":"var _jsxFileName = \"/Users/igorkuznecov/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js\";\nimport React from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddPlacePopup(_ref) {\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onClose: closeAllPopups,\n    isOpen: isAddPlacePopupOpen ? 'popup_opened' : '',\n    name: \"add-card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    buttonText: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        minLength: \"2\",\n        maxLength: \"30\",\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        className: \"form__input form__input_card-name\",\n        name: \"input-card-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-card-name-error form__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"url\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        className: \"form__input form__input_card-link\",\n        name: \"input-card-link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-card-link-error form__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPlacePopup","_ref","isOpen","onClose","closeAllPopups","isAddPlacePopupOpen","name","title","buttonText","children","required","minLength","maxLength","type","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/igorkuznecov/dev/mesto-react/src/components/AddPlacePopup/AddPlacePopup.js"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nexport default function AddPlacePopup({ isOpen, onClose }) {\n  return (\n    <PopupWithForm\n      onClose={closeAllPopups}\n      isOpen={isAddPlacePopupOpen ? 'popup_opened' : ''}\n      name='add-card'\n      title='Новое место'\n      buttonText='Создать'\n    >\n      <>\n        <input\n          required\n          minLength='2'\n          maxLength='30'\n          type='text'\n          placeholder='Название'\n          className='form__input form__input_card-name'\n          name='input-card-name'\n        />\n        <span className='input-card-name-error form__error'></span>\n        <input\n          required\n          type='url'\n          placeholder='Ссылка на картинку'\n          className='form__input form__input_card-link'\n          name='input-card-link'\n        />\n        <span className='input-card-link-error form__error'></span>\n      </>\n    </PopupWithForm>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,kBAAkB,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvE,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACvD,oBACEJ,OAAA,CAACH,aAAa;IACZS,OAAO,EAAEC,cAAe;IACxBF,MAAM,EAAEG,mBAAmB,GAAG,cAAc,GAAG,EAAG;IAClDC,IAAI,EAAC,UAAU;IACfC,KAAK,EAAC,+DAAa;IACnBC,UAAU,EAAC,4CAAS;IAAAC,QAAA,eAEpBZ,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA;QACEa,QAAQ;QACRC,SAAS,EAAC,GAAG;QACbC,SAAS,EAAC,IAAI;QACdC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kDAAU;QACtBC,SAAS,EAAC,mCAAmC;QAC7CT,IAAI,EAAC;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFtB,OAAA;QAAMkB,SAAS,EAAC;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3DtB,OAAA;QACEa,QAAQ;QACRG,IAAI,EAAC,KAAK;QACVC,WAAW,EAAC,oGAAoB;QAChCC,SAAS,EAAC,mCAAmC;QAC7CT,IAAI,EAAC;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFtB,OAAA;QAAMkB,SAAS,EAAC;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,eAC3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEpB;AAACC,EAAA,GA/BuBpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}