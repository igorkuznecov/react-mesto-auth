{"ast":null,"code":"/* eslint-disable */\n\nclass Api {\n  constructor(config) {\n    this._url = config.url, this._headers = config.headers, this._authorization = config.headers.authorization;\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._handleRespone);\n  }\n  _handleRespone(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error ${res.status}`);\n    }\n  }\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._handleRespone);\n  }\n  deleteCard(ID) {\n    return fetch(`${this._url}/cards/${ID}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._handleRespone);\n  }\n  setLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  deleteLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  changeAvatar(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._handleRespone);\n  }\n}\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '3dd76270-4c4f-4c38-aef6-b808f759a447',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_authorization","authorization","_request","options","fetch","then","_handleRespone","res","ok","json","Promise","reject","status","addCard","name","link","method","body","JSON","stringify","deleteCard","ID","getUserInfo","setUserInfo","about","setLike","deleteLike","changeAvatar","avatar","api"],"sources":["/Users/igorkuznecov/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["/* eslint-disable */\n\nclass Api {\n  constructor(config) {\n    this._url = config.url,\n    this._headers = config.headers,\n    this._authorization = config.headers.authorization;\n  }\n\n  _request(url, options) {\n    return fetch(url, options).then(this._handleRespone)\n  }\n\n  _handleRespone(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error ${res.status}`);\n    }\n  }\n\n\n\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._handleRespone)\n  }\n\n  deleteCard(ID) {\n    return fetch(`${this._url}/cards/${ID}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._handleRespone)\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._handleRespone)\n  }\n\n  setLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  deleteLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  changeAvatar(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(this._handleRespone)\n  }\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '3dd76270-4c4f-4c38-aef6-b808f759a447',\n    'Content-Type': 'application/json'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}