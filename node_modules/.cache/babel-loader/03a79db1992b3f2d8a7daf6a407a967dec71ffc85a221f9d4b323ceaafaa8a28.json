{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url, this._headers = headers, this._authorization = headers.authorization;\n  }\n  _handleRespone(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error ${res.status}`);\n    }\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._handleRespone);\n  }\n  deleteCard(ID) {\n    return fetch(`${this._url}/cards/${ID}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._handleRespone);\n  }\n  setLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  deleteLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleRespone);\n  }\n  changeAvatar(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._handleRespone);\n  }\n}\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '3dd76270-4c4f-4c38-aef6-b808f759a447',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","_ref","url","headers","_url","_headers","_authorization","authorization","_handleRespone","res","ok","json","Promise","reject","status","getCards","fetch","method","then","addCard","name","link","body","JSON","stringify","deleteCard","ID","getUserInfo","setUserInfo","about","setLike","deleteLike","changeAvatar","avatar","api"],"sources":["/Users/igorkuznecov/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor({url, headers}) {\n    this._url = url,\n    this._headers = headers,\n    this._authorization = headers.authorization;\n  }\n\n  _handleRespone(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error ${res.status}`);\n    }\n  }\n\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._handleRespone)\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._handleRespone)\n  }\n\n  deleteCard(ID) {\n    return fetch(`${this._url}/cards/${ID}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n    .then(this._handleRespone)\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._handleRespone)\n  }\n\n  setLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  deleteLike(ID) {\n    return fetch(`${this._url}/cards/${ID}/likes`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this._handleRespone)\n  }\n\n  changeAvatar(link) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(this._handleRespone)\n  }\n}\n\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-68',\n  headers: {\n    authorization: '3dd76270-4c4f-4c38-aef6-b808f759a447',\n    'Content-Type': 'application/json'\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}